---
# tasks file for samba_dc_init
- name: Исходные данные домена
  debug:
    msg:
      - "Домен: {{dc_realm}}"
      - "Хостнейм: {{dc_hostname}}"
      - "Workgroup: {{dc_workgroup}}"
      - "DNS Backend: {{samba_dns_backend}}"
      - "LEVEL: {{samba_domain_and_forest_level}}"
      - "extra options: {{ extra_options }}"
      - "GPO: {{ GPO | default('NO') }}"
      - "reverse DNS: {{ rdns | default('NO') }}"
  tags: summary

- name: Установка необходимых пакетов
  apt_rpm:
    pkg: task-samba-dc,chrony,samba
    state: present
    update_cache: yes
  tags: task-samba-dc

- name: Конфигурация NTP
  ansible.builtin.command:
    cmd: control chrony server

- name: Включение NTP (режим server)
  service:
    name: chronyd
    state: started
    enabled: true

#ansible.builtin.package_facts слишком долго, обойдемся rpm    
- name: Определение версии samba
  ansible.builtin.command:
    cmd:  "/usr/bin/rpm -q --queryformat '%{VERSION}' samba"
  register: SAMBA_VERSION
  tags: samba_version

    #- debug: var=SAMBA_VERSION.stdout
    #  tags: samba_version

- name: "{{ SAMBA_VERSION.stdout }}"
  shell:  "echo 1"
  register: ignore_requester_sid
  when: SAMBA_VERSION.stdout is version('4.16.4', '>=')
  tags: samba_version

    #- ansible.builtin.debug:
    #    msg: "{{ ignore_requester_sid }}"
    #  tags: samba_version

- name: Установка необходимых пакетов если samba_dns_backend = BIND9_DLZ
  apt_rpm:
    pkg: bind,bind-utils
    state: present
    update_cache: yes
  when: samba_dns_backend=="BIND9_DLZ"
  tags: bind9_dlz

- name: Конфигурация bind-chroot
  ansible.builtin.command:
    cmd: control bind-chroot disabled
  when: samba_dns_backend=="BIND9_DLZ"

- name: Конфигурация bind - KRB5RCACHETYPE="none"
  shell: grep -q KRB5RCACHETYPE /etc/sysconfig/bind || echo 'KRB5RCACHETYPE="none"' >> /etc/sysconfig/bind
  when: samba_dns_backend=="BIND9_DLZ"

- name: Конфигурация bind - bind-dns include
  shell: grep -q 'bind-dns' /etc/bind/named.conf || echo 'include "/var/lib/samba/bind-dns/named.conf";' >> /etc/bind/named.conf    
  when: samba_dns_backend=="BIND9_DLZ"

- name: Конфигурация bind - options.conf
  ansible.builtin.template:
    src: options.conf.j2
    dest: /etc/bind/options.conf
    backup: yes
    owner: root
    group: named
    mode: '0640'
  when: samba_dns_backend=="BIND9_DLZ"

- name: Отключение ipv6 для bind (/etc/bind/options.conf)
  replace:
    path: /etc/bind/options.conf
    backup: yes
    regexp: '^(\s+)listen-on-v6'
    replace: '\n\t# listen-on-v6'
  when: samba_dns_backend=="BIND9_DLZ" and ipv6_disable=="yes"

- name: Отключение ipv6 для bind (/etc/sysconfig/bind)
  replace:
    backup: yes
    path: /etc/sysconfig/bind
    regexp: '(#?)(\s+)EXTRAOPTIONS="'
    replace: '\n\tEXTRAOPTIONS="-4 '
  when: samba_dns_backend=="BIND9_DLZ" and ipv6_disable=="yes"

- name: Формирование списка служб
  service_facts:

    
- name: Конфигурация сервисов
  service:
    name: "{{item}}" 
    state: stopped
    enabled: false
  when:
    ansible_facts.services[item] is defined
  with_items:
    - smb.service
    - nmb.service
    - krb5kdc.service
    - slapd.service
    - bind.service
  tags: serv

- name: Подготовка небходимых файлов, папок
  ansible.builtin.file:
    path: "{{item}}"
    state: absent
  with_items:
    - /etc/samba/smb.conf
    - /var/lib/samba
    - /var/cache/samba
    - /etc/krb5.keytab

- name: Создание папки sysvol
  ansible.builtin.file:
    path: /var/lib/samba/sysvol
    state: directory

- name: Правка /etc/sysconfig/network
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/network
    regexp: '^HOSTNAME='
    line: HOSTNAME={{dc_hostname}}

- name: Установка имени хоста
  ansible.builtin.hostname:
    name: "{{dc_hostname}}"
    use: systemd

- name: Разворачивание домена (для SAMBA < 4.19)
  ansible.builtin.command:
    argv:
      - "samba-tool"
      - "domain"
      - "provision"
      - "--realm={{dc_realm}}"
      - "--domain={{dc_workgroup}}"
      - "--adminpass={{dc_administrator_password}}"
      - "--dns-backend={{samba_dns_backend}}"
      - "--server-role=dc"
      - "{{extra_options}}"
        #register: domain-output
  when: SAMBA_VERSION.stdout is version('4.19.0', '<')

- name: Разворачивание домена (для SAMBA 4.19+)
  ansible.builtin.command:
    argv:
      - "samba-tool"
      - "domain"
      - "provision"
      - "--realm={{dc_realm}}"
      - "--domain={{dc_workgroup}}"
      - "--adminpass={{dc_administrator_password}}"
      - "--dns-backend={{samba_dns_backend}}"
      - "--server-role=dc"
      - "--function-level={{samba_domain_and_forest_level}}"
      - "--base-schema={{samba_base_schema}}"
      - "--backend-store=mdb"
      - "--backend-store-size={{samba_db_size}}"
      - "--option=ad dc functional level = {{samba_domain_and_forest_level}}"
      - "{{extra_options}}"
  when: SAMBA_VERSION.stdout is version('4.19', '>=')

- set_fact:
    dc_hostname: "{{ dc_hostname.split('.')[0] }}"
  when: samba_dns_backend == 'BIND9_DLZ'

# set short name for bind9_dlz
- name: Установки имени хоста
  ansible.builtin.hostname:
    name: "{{dc_hostname}}"
    use: systemd
  when: samba_dns_backend == 'BIND9_DLZ'


#community.general.ini_file:
#ansible-galaxy collection install community.general

- name: Добавление dns forward для SAMBA_INTERNAL
  ansible.builtin.lineinfile:
    path: /etc/samba/smb.conf
    insertbefore: 'realm ='
    state: present
    line: "\tdns forwarder={{samba_dns_forward}}"
  when: samba_dns_backend=="SAMBA_INTERNAL" and samba_dns_forward is defined

# /etc/sssd/sssd.conf krb5_validate = false
- name: Фикс ошибки TGT has been revoked
  ansible.builtin.lineinfile:
    path: /etc/samba/smb.conf
    insertbefore: 'realm ='
    state: present
    line: ignore requester sid = yes 
  when: ignore_requester_sid is defined and ignore_requester_sid==1
  tags: smbconf

- name: Настройка Kerberos
  ansible.builtin.copy:
    remote_src: yes
    src: /var/lib/samba/private/krb5.conf 
    dest: /etc/krb5.conf

#
#Domain AUTH on DC
- name: Domain auth - Установка необходимых пакетов
  apt_rpm:
    pkg: task-auth-ad-winbind,gpupdate
    state: present
    update_cache: yes
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Domain auth - krb5.conf edit
  ini_file:
    path: "/etc/krb5.conf"
    section: libdefaults
    option: dns_lookup_realm
    value: "false"
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Domain auth - krb5.conf edit
  ini_file:
    path: "/etc/krb5.conf"
    section: libdefaults
    option: default_realm
    value: "{{dc_realm}}"
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Domain auth - smb.conf edit
  ini_file:
    path: /etc/samba/smb.conf  
    section: global
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - { option: "kerberos method", value: "dedicated keytab" }
    - { option: "dedicated keytab file", value: "/etc/krb5.keytab" }
    - { option: "template shell", value: "/bin/bash" }
    - { option: "template homedir", value: "/home/{{dc_realm|upper}}/%U" }
    - { option: "wins support", value: "no" }
    - { option: "winbind use default domain", value: "yes" }
    - { option: "winbind enum users", value: "no" }
    - { option: "winbind enum groups", value: "no" }
    - { option: "winbind refresh tickets", value: "yes" }
    - { option: "winbind offline logon", value: "yes" }
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Change nsswitch.conf
  ansible.builtin.copy:
    src: nsswitch.conf
    dest: /etc/nsswitch.conf
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Change system-auth to winbind
  ansible.builtin.command:
    argv:
      - "control"
      - "system-auth"
      - "winbind"
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Включение службы samba
  service:
    name: samba
    state: restarted
    enabled: true
  tags: domain_auth

- name: Keytab generate
  ansible.builtin.command:
    argv:
      - "net"
      - "ads"
      - "keytab"
      - "create"
  ignore_errors: true
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Конфигурация сервисов (nscd)
  service:
    name: "nscd"
    state: stopped
    enabled: false
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: domain_auth

- name: Add role
  ansible.builtin.blockinfile:
    path: /etc/role
    block: |
      Domain Users:users
      Domain Admins:localadmins
    insertbefore: BOF
  when: domain_auth is defined and domain_auth is match("winbind",ignorecase="true")
  tags: [ domain_auth,role ]

- name: Включение службы bind
  service:
    name: bind
    state: started
    enabled: true
  when: samba_dns_backend=="BIND9_DLZ"

- name: ВРЕМЕННОЕ ИЗМЕНЕНИЕ /etc/resolv.conf (для проверки)
  replace:
    path: /etc/resolv.conf
    regexp: '^(.*)'
    replace: '#\1'

- name: ВРЕМЕННОЕ ИЗМЕНЕНИЕ /etc/resolv.conf (для проверки)
  ansible.builtin.blockinfile:
    path: /etc/resolv.conf
    block: |
      search {{dc_realm}}
      nameserver 127.0.0.1
    insertafter: EOdc1-ipv4F

# GPO
- name: Include VARs for other platform
  include_vars:  "{{ ansible_distribution }}/p{{ ansible_distribution_major_version }}/gpo.yml"
  tags: [ 'samba_gpo' ]

- name: Установка необходимых пакетов 
  apt_rpm: 
    pkg: "{{admx}}" 
    state: present 
    update_cache: yes 
  when: GPO is defined and GPO is match("yes",ignorecase="true")
  tags: samba_gpo

- name: Установка ADMX-файлов от Microsoft 
  ansible.builtin.command: 
    cmd: admx-msi-setup
  when: GPO is defined and GPO is match("yes",ignorecase="true")
  tags: samba_gpo

- name: Загрузка ADMX-файлов в sysvol 
  ansible.builtin.command:
    cmd: samba-tool gpo admxload -U {{ dc_administrator_login | default('Administrator') }} --password={{dc_administrator_password}}
  when: GPO is defined and GPO is match("yes",ignorecase="true")
  tags: samba_gpo

#rdns    
- name: Создание обратной зоны
  ansible.builtin.command:
    argv: 
      - "samba-tool"
      - "dns"
      - "zonecreate"
      - "127.0.0.1"
      - "{{ rdns_zone }}"
      - "-U{{ dc_administrator_login }}"
      - "--password={{ dc_administrator_password }}"
  when: rdns is defined and rdns is match("yes",ignorecase="true")
  tags: rdns

#- name: Get ticket
#  ansible.builtin.shell:
#    cmd: "echo {{dc_administrator_password}} | kinit administrator@{{dc_realm|upper}}"
#  no_log: true
#  when: additional_DC_ip is defined
#  tags: add_additional_dc

- name: Add additional DCs DNS records
  ansible.builtin.command:
    argv: 
      - "samba-tool"
      - "dns"
      - "add"
      - "{{dc_hostname}}"
      - "{{dc_realm}}"
      - "{{ item.name }}"
      - "A"
      - "{{ item.value }}"
      - "-UAdministrator"
      - "--password={{dc_administrator_password}}"
  loop: "{{ additional_DC_ip }}"
  when: additional_DC_ip is defined
  no_log: yes
  tags: add_additional_dc

- name: Set noexpiry for Administrator
  ansible.builtin.command:
    argv:
      - "samba-tool"
      - "user"
      - "setexpiry"
      - "administrator"
      - "--noexpiry"

- name: Create optional users (from inventory vars)
  ansible.builtin.command:
    argv:
      - "samba-tool" 
      - "user"
      - "add"
      - "{{item.name}}"
      - "{{item.password}}"
      - "{% if item.email != '' %}--mail-address={{item.email}}{% endif %}"
  with_items: "{{create_users}}"
  when: create_users is defined
  ignore_errors: true
  tags: optional_users

- name: Set noexpiry for optional users (from inventory vars)
  ansible.builtin.command:
    argv:
      - "samba-tool"
      - "user"
      - "setexpiry"
      - "{{item.name}}"
      - "--noexpiry"
  with_items: "{{create_users}}"
  when: 
    - create_users is defined
    - item.expired is match("no",ignorecase="true")
  tags: optional_users


- name: Последующие действия
  ansible.builtin.debug:
    msg: 
      - "Убедитесь, что в /etc/resolv.conf указан единственный nameserver 127.0.0.1"
      - "При необходимости нужно конкретизировать allow_query, forwarders в /etc/bind/options.conf"
      - "Сделать reboot"


